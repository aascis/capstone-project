import { Switch, Route, useLocation } from "wouter";
import { queryClient } from "./lib/queryClient";
import { QueryClientProvider } from "@tanstack/react-query";
import { Toaster } from "@/components/ui/toaster";
import { TooltipProvider } from "@/components/ui/tooltip";
import { Navbar } from "@/components/navbar";
import { Footer } from "@/components/footer";
import Home from "@/pages/home";
import EmployeeDashboard from "@/pages/employee-dashboard";
import CustomerDashboard from "@/pages/customer-dashboard";
import NotFound from "@/pages/not-found";
import { useAuth } from "@/hooks/use-auth";

function ProtectedRoute({ 
  children, 
  requiredUserType 
}: { 
  children: React.ReactNode; 
  requiredUserType?: "employee" | "customer";
}) {
  const { user, isLoading } = useAuth();

  if (isLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-primary mx-auto"></div>
          <p className="mt-4 text-gray-600">Loading...</p>
        </div>
      </div>
    );
  }

  if (!user) {
    window.location.href = "/";
    return null;
  }

  if (requiredUserType && user.userType !== requiredUserType) {
    return <NotFound />;
  }

  return <>{children}</>;
}

function AppContent() {
  return (
    <Switch>
      <Route path="/" component={Home} />
      <Route path="/employee-dashboard">
        <ProtectedRoute requiredUserType="employee">
          <EmployeeDashboard />
        </ProtectedRoute>
      </Route>
       <Route path="/customer-dashboard">
        <ProtectedRoute requiredUserType="customer">
          <div className="min-h-screen bg-gradient-to-br from-orange-400 via-red-500 to-purple-600">
            <CustomerDashboard />
          </div>
        </ProtectedRoute>
      </Route>
      <Route component={NotFound} />
    </Switch>
  );
}

function Layout() {
  const [location] = useLocation();
  const isCustomerDashboard = location === "/customer-dashboard";
  
  if (isCustomerDashboard) {
    return <AppContent />;
  }
  
  return (
    <>
      <Navbar />
      <AppContent />
      <Footer />
    </>
  );
}

function App() {
  return (
    <QueryClientProvider client={queryClient}>
      <TooltipProvider>
        <Toaster />
        <Layout />
      </TooltipProvider>
    </QueryClientProvider>
  );
}

export default App;
